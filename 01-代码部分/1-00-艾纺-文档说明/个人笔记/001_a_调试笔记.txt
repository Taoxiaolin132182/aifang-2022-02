@主程序路径
        cd /opt/app/ai-product-haijiang/ai-hj-service/aiHjService/

    任务内容-要尽量详细
    任务时间-及周期
    任务优先级
-----------目标功能-------------
@@ 用来 txt 来做配置文件
        读取前判断存在，备份，读取备份文件夹中的个数，删除时间较早的，
            怎么判断文件需要备份(创键时间，修改时间，)
            要是读取失败，则读取回退txt,怎么操作
------------------------
@2021-10-29
@2021-10-28
    @
    @ 
@2021-10-27
    @ 优化txt配置功能的程序，写成小功能块 (ok  6h)
            \07_\00_\2021_10.15_测写实时读取更新配置文件\function_code2.py
    @

@2021-10-26
    @ 优化测试GPIO的功能，增加 接收输入参数 来控制测试灯光模式    (1h)
    @ 外仓1.1 白紫光交替拍照的灯光调试，紫光识别的更新           (1h)
    @   1、研究txt更新引起的修改、访问、创建时间的变化
            直接替换时，修改、创建时间会变成替换时刻的时间
        2、读取txt配置 的逻辑
            2.1、确认或创建 备份文件夹
            2.2、确认要用的文件存在，
                    存在时，读取txt信息
                        读取成功时，备份文件
                        读取异常时，发起 恢复最新备份 信号
                    不存在时，发起 恢复最新备份 信号
        3、获取真实 备份配置文件数量
        4、如果有 恢复最新备份 信号
            恢复最新备份，读取txt信息
                读取成功时，提示检测新文件
                读取异常时，结束进程
        5、检查，删除多余的备份文件
    应该再添加把异常文件写入错误备份
    把各小功能写成函数
    print 的 改写 添加 bool 全局控制是否输出 (可行@@@)
        文件路径：07_代码实现\00_小功能测试\2021_10.15_测写实时\function_code1\before_read_prepare1
@2021-10-25
    @ 天宇羊毛的上传图片次数更新 为 % 3 ==1    (1h)
        文件在07/04/arm1.。。。
    @ 测试著斌开发的aiinfer 老蓝本机  @ 逻辑上调用可行 + 生成对应的txt  (2h)
        程序在：07/ 02/ 2021_1025 /ai-hj / aiinfer_test1
    @ 询问仁杰羊毛那边更新怎么办，分段逻辑怎么搞，抓手1，2，3，4 各抓哪边

    @ 外仓1.1 白紫光交替拍照的进一步调试 (4h)
        现场灯光交替异常
        帅骏的紫光识别函数的更新，对应的更改
    @ 便捷指令 已经部署到 老蓝本机、新蓝本机、外仓1.1设备ARM1、2 (1h)
        蛮好用的，对反复启停程序，更新，查看，起到了节约了一点时间

    下周计划
        1、抓手分段抓取模式的测写
            从存队列的时候去分队列
        2、天宇和仁杰的上传图片频率设为 1/3
            天宇改数据
            仁杰有问题，现在版本不支持，要更新
        3、要是想上传nobox需要涉及的改造


    十月18-22一周工作内容
    1、试生产1.1(新)现场支持：(换模型，U盘识别，屏蔽抓手，种类选择等，调整抓手对位)
    2、无锡远纺1.2 现场支持：(抓手不抓(相机超时)，循环计数功能配置(待完善-与PLC交互)，抓手对位)
    3、仁杰羊毛屏蔽抓手
    4、测写便携的查杀启脚本, ubantu 自定义命令
    5、测写读取txt文件做配置文件(为方便调整抓手参数做准备)

@2021-10-22
    @ 打算 给著斌 写一个老版本程序 调用 老AIinfer 测试读取图片，传入图片的功能

    @ 读取 txt文件测试(优先级不高，为方便调整抓手参数做准备)
        @@@ 经测试，自己创建并通过记事本打开写入的内容，只要符合字典标准就能读取成功

        可行，示例文件在：07_代码实现\00_小功能测试\2021_10.15_测写实时读取更新配置文件

    @ 著斌给了 天宇的羊绒模型及对应txt配置文件，和aiinfer
        修改了aiinfer.py中的配置文件路径，还要配置文件中的模型路径
    @ 无锡远纺 下午13：21报通讯故障，13：22报相机故障
        就是相机超时，但根据日志 13：20 就发生了相机超时，并退出程序，
            退出程序前，根据程序逻辑，会给PLC发送相机故障的信号
        因为tcam-ctrl -l 都找不到相机，所以程序一直在初始化相机，但是不写init.txt
            所以会被守护进程杀掉，再重启

@2021-10-21
    @ 试生产1.1 调整抓手位置，排查不抓现象( 1h )
        9点之前，ARM 有异常，导致log无记录
    @ 仁杰羊毛屏蔽抓手
    @ 测写 小功能-选择间隔输出打印
        \07_代码实现\00_小功能测试\2021_10.11_录入txt和读取
    @研究 ubantu 自定义命令
        #simple cmd
        alias af-path='cd /opt/app/ai-product-haijiang/ai-hj-service/aiHjService/'
        alias af-ctrl='python3 /opt/app/ai-product-haijiang/ai-hj-service/aiHjService/kill_or_start_aifang_code.py'
        alias af-log='cd /opt/logs/txl01/'
        alias af-look1='tail -100f console.log'
        alias af-look2='tail -100f we1_need_record.log'

    @ 无锡远纺 老设备 ARM2 2号抓手 y轴 -75mm
        原因：2号抓手下降速度变慢
@2021-10-20
    @ 无锡远纺1.2 现场测试 循环计数功能
        需要 添加和PLC交互信号
            1、告知是否需要加载 之前记录，不告知的情况如何做
            2、告知何时算开始计时
    @ 测写 便携的查杀启 脚本
@2021-10-19
    @ 试生产(新造)1.1 屏蔽抓手，异纤选择模式2，拍照间隔0.9s
        恢复抓手，拍照间隔1.4s

    @ 无锡远纺1.2 不抓(相机超时)，循环计数功能配置，抓手对位(整个下午)
        1、相机超时：临时措施增加了拍照时间间隔
        2、？？相机超时后没返回PLC和退出程序
            对比 sys.exit(0) 和os._exit(0)
            @@@@@@@一般来说os._exit() 用于在线程中退出
                    sys.exit() 用于在主线程中退出。
        3、暂停后启动后读取PLC的传送带频率，会有点问题，原2300，连着读到2次1933，时间间隔为0.8s

    @@@@@@@@@@@@@@@@@@@@ 减少打印能减少相机超时的现象
@2021-10-18
    @ 试生产1.1(新) - 换成羊绒模型, 读取U盘设置(命令行)
    @ 测写 查、杀、起 程序
        /07_代码实现/00_小功能测试/2021_10.18_研究py程序结束输入内容/kill_or_start_aifang_code.py


十月11-15一周工作内容
    1、循环检测功能的优化调试，添加断电记录的功能(对应的txt存读等小功能的测写)
    2、仁杰羊毛现场-改模型，画框程序优化(现场U盘拷贝有问题)，ARM2异常问题排查(相机超时),调节曝光时间
    3、试生产新造1.1的4号抓手测试，修改模型类型，讨论传送带速度比率、抓手情况、紫外光源测试
    4、试生产新造1.1中读取txt异常问题，测试修改
    5、无锡远纺1.2 现场远程调试(添加出棉机控制的PLC相关的代码, 设备上网问题)


@2021-10-15
    @ 继续-循环检测的功能，添加断电记录的功能，完成1.2程序上的同步(但是没有真实测试)
    @ 1.2 添加出棉机控制的PLC，程序上添加相关配置，IP 125，出棉信号地址：M100
    @ 无锡远纺1.2 现场远程调试, （（（验证VPN、网络，一定要确保ARM开机  ！！！）））
    @ 研究实时刷新.py配置文件，并读取(失败。。。)
    @ python 程序进程 的 手动停止
            现在方法： ps -ef|grep hj
                      sudo kill -9 xxx
        .sh 文件的写法
        python 程序启动指令时 接收输入参数
@2021-10-14
    @ 继续-循环检测的功能，添加断电记录的功能 (还在研究对应的细化功能) --txt（较大进展）
        模拟测试通过
            修正的单次中多次停止的计算计时
@2021-10-13
    @ 邓泽预定： 早上 调一下仁杰这边相机的曝光时间(1h)
    @ 写入读取 txt 测试 w , r , (2h)
    @ 试生产新造1.1 的 紫外光源测试 (4h)
    @ 继续-循环检测的功能，添加断电记录的功能 (还在研究对应的细化功能) --txt


    @ 下午嘉伟预定： 联调无锡远纺1.2 循环测试 ，出棉信号（未执行）

@2021-10-12
    1、继续-循环检测的功能，添加断电记录的功能 (还在研究对应的细化功能)
    2、仁杰羊毛现场-早上ARM2异常(相机超时)，
    3、试生产新造1.1的4号抓手测试，修改模型类型，讨论传送带速度比率、抓手情况等
        读取txt异常，应该是多了一组换行符，优化了创建，写入，读取的函数

@2021-10-11
    方向：1、老版本的新框架改写  2、返回的方框筛选
    1、试写老版本拍照+新框架，方便以后维护 ( 预计 1天 )
    2、循环检测的功能，添加断电记录的功能 (还在研究对应的细化功能)
    3、仁杰羊毛现场-改模型，画框程序优化(现场U盘拷贝有问题)


@2021-10-9
    @ 天宇的旧版本代码 消费者 和配置文件的 抓手偏差补偿功能细化( 1.5 h )
    @ 仁杰羊毛现场的上下模组拍照亮度不一致的答疑( 1.5 h )
    @ 查看 UV的检测函数(帅骏写的那个)( 1 h )
    @ 循环外读取PLC的偏差值参数 测写 (方便以后现场调整) ( 4 h)
        之后要测试是否能读取 负数
    @ 外仓设备1.1 调试4号抓手，拍照全设为白光常亮( 1.5 h )
        GPIO 不接受控制的话，考虑光源的电源是否供电。


@2021-10-8
    @ 开始同步1.1完善版 --仁杰羊毛的代码
        camera_pars.cfg / cfgs.py / image2world.py
        config_armz.py






@2021-09-29
    @ 调试设备1.1 +UV版
        自检过程中，增加 纯拍照测试 函数
        开始同步ARM2
            增加了交替拍照的判断，只需要配置相关参数，就能切换是否交替拍照
    @ 最新的call_code 是 07代码实现/08试生产设备/01项目工程/call_code

@2021-09-28
    @ 调试设备1.1 +UV版
        1、上下传送带的测速，尽量在150mm/s左右
            高处传送带长度：9610 = 315 + 295 + (1830 + 2670) *2
                单圈 64.3s  25hz  速度  149.5mm/s   系数 0.0598
            低处传送带长度和高处一致(和高俊确认过，传送带有部分被遮挡，无法常规测量)
                单圈 58.6s  25hz  速度 164 mm/s   系数 0.0656
        2、UV-AIinfer 可以先屏蔽识别，直接返回空值 @
        3、控制光源后的等待触发，减小到10ms
        4、判断光源要有选择，或是关闭
            有选择，光源控制信号在当前帧AIinfer返回完成后，进行改变
        5、循环拍照前，需要保证取到稳定的速度
        6、多相机有异纤时
            同步去重，在1.2版，做了改动，忘记改参数了
        7、初始化，或重启的时候 读取速度 加长时间


@2021-09-27
    @ 天宇羊毛更换 高处的B相机(3小时)
        改相机号，改B相机对应的X方向的参数
    @ 测试拍照前更新曝光参数的功能测试(5小时)
        220 亮灯时长
        10000 UV曝光 / 1800 Wb曝光

@2021-09-26
    1、编写文档 （5小时）
        内容：说明一下怎样远程连接到现场设备的ARM，如何检查ARM上的程序和AI模型是否正常运行
        目标：产品工程师也可以自行查看远程设备的运行情况，初步判断一下问题
    2、处理张家港天宇羊毛现场问题 （3小时）
        问题描述：PLC报警：ARM通讯异常
            估计原因
                1：局域网有问题， 09/25的日志显示，和PLC通讯不上
                    上网的网口 + 通讯的网口
                2：相机连接问题， 09/26的
                    更换B相机；刷IP 102 新相机号：39024088
    3、测试拍照前更新曝光参数的功能测试
        写入参数时(即整个循环内，不能在外部 使用指令去查看相机参数，否则程序上改参数时将会报错)--测试时的现象



        一周工作内容(09.22-09.30)
        1、设备1.2 循环检测功能的开发及测试 (1.5天)
        2、新造设备1.1的交替光拍摄开发，试写，未测试 (0.5天)
        3、仁杰羊毛线程支援:修改屏蔽抓手 + 切换模型 (1.5小时)
        4、GPIO 控制灯光的调试 + 讨论  (近1天)

        5、给产品工程师的远程查看信息的说明书的编写(0.5天)
        6、天宇羊毛的现场支援(ARM通讯异常问题排查,相机问题(高处B相机损坏)排查及更换配置)(0.6天)
        7、拍照前更新曝光参数的功能 的 编写和测试(1天)
        8、新造设备1.1的交替光拍摄的调试(测传送带速度，交替逻辑，等)(近2天)

        --节后计划
        1、将艾纺程序1.1完善版，更新同步至 仁杰羊毛
        2、测试开发 新造设备1.1的交替光拍摄(待完善--硬件条件未跟上)
        3、将循环检测功能 部署到无锡现场设备1.2中
@2021-09-24
    @ 仁杰羊毛切换模型，羊绒 （1小时）
    @ 金明那边相机拍照显示不出来
        网线问题，及网口IP配置不对
    @ GPIO 控制灯光的调试
        1、AGX引脚 从电源按钮处开始数，上为1，下为2
        2、公共端接2号引脚
        3、引脚使用，12 和 13  (估计 15，18，23都可以哦)
        4、@@@@   2路输出需要各用一块放大版
                    共用时，第二路会出现高电平(放大版灭灯) 有延时
        代码可见 07_代码实现/08_试生产1.1设备210906/01_项目工程/2021_0922.../share_func/test_GPIO.py
    @ 拍照前 刷入 曝光灯参数的调试，测试
        方法在微信，和张毕华的聊天中
        git上，要拉下来
@2021-09-23
    @ 现阶段最新的为：
        1、07_代码实现/08_试生产1.1设备(新造)/0922_GPIO触发版
        2、07_代码实现/06_试生产1.2设备/09_16-个数分析
    @ 设备1.2的循环检测-续
        艾纺，循环检测
        run. list 首先为None
        当运行时，开始计时有2个，总开始时间，和每段开始时间
        每满5分钟打印一次，并重置现在时间为开始时间，停顿时间清空为None，停顿时长置为0，不满是睡眠跳过
          5分钟=现在时间-开始时间-停顿时间
        停顿时间初始为None，
          一旦停止信号，那先判断是否为none，是，则写入初始时间，否的话，计算停顿时长，每次刷新
        当总时长大于300或者，达标的时候，写入PLC
    @ 循环检测  --功能检测 测试程序 (下午)
        测试例程，测试，返修
            文件在 /02-试生产/03-公司测试 /09-23_测试。。。
    @ log.conf
    @ 仁杰羊毛线程支援 （修改屏蔽抓手--1小时）
@2021-09-22
    @ 新造设备1.1的交替光拍摄开发
        1、新建GPIO循环线程
        2、白、紫光切换的的标记变量
            触发变量，AI分析时的变量
    @ 设备1.2的循环检测

    @ 仁杰羊毛 停止启动 录入选择模式 的功能 的修改bug
    @ 把无锡远纺的工牌，给了钮晶晶，收据也一起给了

@2021-09-17
    1、无锡远纺的模型部署(著斌要装几个库，约半小时)
        更新几个文件，重启后看是否能正常返回
        更新失败，9002的主程序中，arm1有打印AI返回，arm2无返回
        最后更新完成，返回无错误

    2、试生产1.2 的 配合调试(远程)

    3、硬件触发拍照--GPIO
    4、1.2 循环检测

@2021-09-16
    1、测新造1.1设备的传送带速度-频率的比值
        高处传送带长度：9610 = 315 + 295 + (1830 + 2670) *2
            频率 34 单圈时间 27.8  速度为 345.7 mm/s  --比率为：0.1017

    2、对点-抓手 --高处模组完成
        低处模组-未调试--硬件问题
        传送带之间有差异，且抓手与相机模组间距较近，抓手3始终是来不及抓的状态
    3、拷贝一些图片，给算法确认亮度
    4、配置 /etc/rc.local 、sudo crontab -e
    5、配置后台VPN
@2021-09-15
    0、仁杰羊毛答疑(1小时)
    1、试生产设备1.2 --调整抓手测试函数(2小时)
    2、试生产设备1.1 --()
        2.1、调整2台arm的DNSserver,网关--192.168.1.11
        2.2、优化屏蔽抓手的功能--更精准
        2.3、硬件条件未达标(气源，PLC信号，4号抓手坦克链问题，及带来的屏蔽其重建OP，抓手报警)
@2021-09-14
    1、天宇羊毛现场更细-屏蔽抓手归零功能,减少了存数据库的打印，AI返回的打印 (1.5小时)
        打包了现阶段的工程
            sudo tar -zcf yangmao_old_code_0914.tar.gz --放在了 07_代码实现
    2、开会(1小时)
    3、无锡远纺现场更新-所有图片全上传(0.5)
    4、仁杰羊毛-启用联网检测功能，并添加暂停重启后--检测创建文件夹的功能(1小时)
        暂停重启后，要刷新label 筛选列表
    5、测试无锡远纺新增异纤检测模型及infer 文件(2)
        公司测试相机B：39024079
    6、无锡，仁杰现场答疑，(1.5)
        存图点位，是否需要屏蔽---待定
    7、画图脚本，添加去除框，和抓手边缘去除框
        @@ 主程序配置文件中的配置文件中的min_x,和max_x 是针对 换算世界坐标出来的点位
            这步估计得优化
@2021-09-13
    @ 试生产1.1抓手设备标定调试
        arm1： 试生产1.1_新造设备_ARM1
            IP 192.168.1.118
            mac: 48b02d134739
            程序识别mac:0030646b81ea
            sql 到ff_color 版
        arm2：
            IP 192.168.1.119
            mac: 48b02d05aa7b
            程序识别mac:0030646b19be
@2021-09-12
    @ 完成标定
    试生产1.1抓手设备标定调试
        arm1:  700 30   B:(1051,265) 相机左上点(00)，
                左上：(1051,265)
                右上：(751,265)
                右下：(751,475)
                左下：(1051,475)
            Camera_A: 30124932
            Camera_B: 35024021
            Camera_C: 30124934

        arm2:   B:(1030,265) 相机左上点(00)，
            Camera_A:30124935
            Camera_B:30125170
            Camera_C:30124942

---1周工作计划
    @ 周三周四开始要去外仓调试新的1.1设备--要协调时间--延到下周
    @ 循环检测的具体需求，要和钮晶晶说一下，并协调PLC那边
    @ PLC 触发 选择label  ---@@@ 完成
    @ 邓泽那边的python3 安装调试----@@@完成
        下载 pycharm, python
    @ 所有版本的初始化部分，异常就要退出程序
        AI模型验证完，就要执行删除程序
---1周工作内容
    1、仁杰羊毛现场协助(修改类别选择，屏蔽抓手，初始化失败的补救，PLC控制选择类别的功能启用优化，)
    2、无锡远纺现场协助(更新模型，微调抓手，通讯中断问题排查，异纤数据异常问题的排查，ARM2批次读取，)
    3、天宇羊毛现场协助(AI服务出错的问题排查，屏蔽抓手，)
    4、模型加密及解密的脚本测写(配置文件版)
    5、羊毛单模型的测试
    6、艾纺现场的上传的配置更改

@2021-09-10
    @ 将 羊毛现场的机器 上传间隔调整为10，上传 wool  天宇OK，仁杰没这功能
      将 棉花现场的机器 上传间隔调整为10，上传 wxmfc  OK
    @ 验证 无锡远纺 上传点数据这一功能是否正常  OK
    @ 最新框架程序中的更新--ARM1-2合并版
        1、初始化的异常-退出程序
        2、读取记录txt文件的处理异常
        3、上传的时间间隔缩短至10-15秒
        4、模型文件的选择删除功能--加载包路径待测
        5、模型加载更新到4类
        6、生产者- 拍摄(另进程) / AIinfer(零进程、串行) / deal-point(主进程)
        8、消费者中 优化因抓手个数带来的改动
                    抓手偏差调整参数的细化
        9、ff_color 、ff_type 暂时不加，暂无需求
        10、选择label 中 读取PLC/根据配置文件update,label_list 部分的优化
        11、若是没有读取到批次号，会记录对应日期作为此次的批次号
        12、抓手回零的条件计数，是否启用的选择判断

@2021-09-09
    @ 仁杰羊毛-现场问题
        1、初始话相机时，出现：
                Triton_server is ready
                One error occur with Error starting pipeline: unknown too, When start pipeline
                init -error: One error occur with Error starting pipeline: unknown too, When start pipeline
            暂时措施：
                初始化失败，那就退出程序，由守护进程重启
            问题因素：
                据毕华说：有可能是相机上次用完没断开，也有可能是网线有问题
        2、PLC 触发 选择label 更新 --
            主程序上的变量强制，配置文件上的参数 设为10+

    @ 无锡现场更新模型
        需要加密，配置文件也要刷新
            后面跑起来不抓取，然后发现AI返回的ff_color 字段是没内容
                原因：---配置文件不用更新。。。

        ARM2取到PLC2的大小批次号
            大批次(10位)， 小批次(16位)
    @ 抓手1 的抓取位置，再次 Y -20mm

@2021-09-08
    @ 无锡线程更新异纤颜色功能字段
    @ 单羊毛模型的测试---过了12小时之后，同程序调用的时间结果增加了
        会不会是温度升高，或是内存未能释放等因素，
            措施：关闭冷却 之后重新测试
    @ 查 无锡远纺的异纤数据 异常
        正常，仅是arm2 无法取到批次号，待PLC那边更新
    @ 天宇羊毛，因采集标注需要，更改程序，屏蔽抓手信号
        15：54 恢复抓手信号，笔记本中ARM1为：屏蔽抓手代码  ARM2为：正常代码



@2021-09-07
    @ 天宇羊毛现场 --AI服务出错
        原因是：开机自检过程中，要创建写入各异纤lable的数量，
            但遇到系统异常没能写入
            那后续读取，会报出异常，从而后续的自检将不会执行
            正常拍摄过程中的AI超时时间远小于自检时的超时时间，所以会报出AI服务异常
        措施：添加读取时的readlines() 长度
                若 == 0 则强制 读取为 0，0，0
    @ 测试羊毛单模型--
        在同时间间隔内
            @ AI 用多线程中，另开新进程，使得AI串行，(deal在另外进程)也会影响拍摄的正常 770 = 184 + 487 + 99
            @ AI 用多线程中，另开新进程，使得AI并行，(deal在另外进程)也会影响拍摄的正常 741 = 209 + 428 + 104
            感觉在主进程中直接开新进程，不会节约时间
                要先在主进程中开新线程，这个线程中再去开新进程
        @ 要让拍摄不超时，整个拍摄的时间间隔，要大于一个完整循环的逻辑时间长度
        @ 把拍照单独放一个进程里, AI 多进程并行，deal 不分进程 ---此时能跑进650，开始阶段会有照片异常

            @@ 要测试， AI 用多线程中，另开新进程，使得AI串行 的情况 丢帧
                拍照另起进程，AI新进程并行，deal 主进程 800ms,350多次,正常,  755 = 218 + 425 + 112
                拍照另起进程，AI新进程串行，deal 主进程 800ms,350多次,正常,  1001 = 266 + 609 + 126 @@
                拍照另起进程，AI主进程串行，deal 主进程 800ms, 开始会卡顿,  1005 = 266 + 613 + 126
                拍照另起进程，AI主进程串行，deal 新进程 800ms, 偶尔会卡顿,  1005 = 266 + 613 + 126
                拍照主进程，  AI主进程串行，deal 主进程 800ms, 较多卡顿,  1003 = 253 + 601 + 149
                拍照主进程，  AI主进程串行，deal 新进程 800ms, 偶尔会卡顿,  1011 = 261 + 610 + 140
                拍照主进程，  AI新进程并行，deal 新进程 800ms, 690多次,正常,  798 = 228 + 433 + 137
                拍照主进程，  AI新进程串行，deal 新进程 800ms, 偶尔会卡顿,  1024 = 274 + 609 + 141
    @@ 上述这些都需要现场加上PLC等线程 实测

@2021-09-06
    @ 仁杰羊毛现场的修改异纤类别(目标：异纤+ 深黄毛)
        现场网络连接问题(笔记本连不上设备所在的局域网--返现并查找问题大约40分钟时间，暂未解决)
            该问题由朱炜暂时接手

    @ 无锡远纺现场：
        1、查找arm2通讯中断的原因
            log有10分钟的间断，不合理
                1、程序卡住了，但是没挂
                2、ubantu 系统挂了
                怎么找出证据
        2、更新模型-找帅骏配合--未完成

        3、微调抓手，和现场配合
            调整抓手1 提前20mm
        要不要优化原来的老版本用新框架

    @ 试写解密程序+ 对应配置文件
        1、当加密时使用相对路径，解压时会解在运行文件所在目录
        2、当加密时使用绝对路径，解压时会解在运行文件所在目录下，在创建完整后续目录，很蛋疼
        3、当加密时使用绝对路径，解压时 命令中也要加P 可以直接解压到目标目录下
        4\原始程序-加密部分，解密部分，调试完成

        公司部分
            模型部分
                把模型文件放入某一路径，配置相关参数
                执行脚本，生成加密文件
            可执行文件部分
                把文件放入某一路径，打包转化
                正常打包
        现场部分
            模型部分
                把模型文件放入某一路径
                把配置文件放入aimodel，配置相关参数
            可执行文件部分
                把打包文件放入某一路径，解压
                配置 vim /etc/rc.local






        ——-————————计划
            1/跟进仁杰现场的调试 @
            2/确认无锡的更新效果
            3/循环检测功能的开发
            4/有时间的话，去调试2.0喷气
        ----------一周工作内容
            1、仁杰羊毛现场持续性远程协助(定位调整，模式选择，模型选择及调试，生成查看带框图片)
            2、无锡远纺报表相关需求的更新(添加字段及对应相关代码更改优化)
            3、试生产1.2设备的远程协助(定位调整，抓手位移异常问题的排查)
            4、天宇羊毛现场的远程协助(恢复重建OP功能,更改其限制次数)
@2021-09-03
    @  完成循环检测小功能的测写--02试生产/03公司测试/06-29-测试队列/crontab_get_num01
    @  完成无锡远纺的添加颜色字段后续需求
        将 color 字段中的 white 统一换成 other



@2021-09-02
    @ 上午，远程协助仁杰羊毛现场
        运行查看havebox功能
            创建 look_pic_code_03 文件夹 并更改权限，存放对应代码
            运行时，1000多个文件没问题
    @ 下午，远程协助仁杰羊毛现场
        更换羊毛双模型  ---拍摄时间间隔为1.3s
            都有丢帧现象
            调试，ARM1 暂时状态是1.1s间隔
                  ARM2 暂时状态是1.1s --有大量的丢帧（200）
                                1.15 --近乎是50-100次丢一帧（300）
                                1.3 -- 不丢帧 （200）
    @ 无锡远纺任务
        改 image,piont 表的改造
            old 蓝本机改造表结构
            save_point,save_image 的改造
            utils.py 的改造
            主程序的改造
                image部分
                point 录入的部分

        判断有批次号的图片再传
        上传比例从30张 提到 10

@2021-09-01
    请假 --远程排查试生产1.2的抓手位移异常问题
        结论，不是程序方面问题，请PLC那边排查
@2021-08-31
    @ 仁杰羊毛
        现场修改 只抓异纤
    @ 无锡现场
        无锡数据上传要改一下，
        t_image_record只上传havebox数据
            程序中屏蔽nobox的image表的写入
        t_take_photo_record数据不上传
            在 /opt/config/up... 删除对应语句


@2021-08-30
    @ 羊毛-天宇 现场，恢复重建OP功能，次数设为1000次  ---完成
        原因 长时间不归零，会有累计误差，容易撞到后极限的感应器
    @ 1、无锡现场，更新完后出现 arm通讯中断的现象，待排查 ---arm2
      2、后台的点位表打不开
            是type字段的类型不同步--灿明已改
    @ 仁杰现场：
        上网卡状态异常

    @




@2021-08-27
    @ 无锡远纺程序，按记录分析，ARM1,2 相同，仅有2处打印有差异-
    @ 更新 读取原图+txt文件 此程序
        'labelMap': {'level': 'havebox', 'score': 0.78332, 'ff_color': 'other', 'ff_type': ''
    @ 中午-仁杰
        改为2抓手模式（主屏254，PLC1 250， PLC2 252）
        据产品说，要用羊毛的双模型，乐观估计拍照间隔在1.1秒左右，所以需要降低传送带速度272mm/s


@2021-08-25
    @ 修改2.0 arm1 程序 -- 识别mac地址版本
    @ 中午 讨论循环检测的方案
@2021-08-24
    @ 调试1.2  ---@@ 优化
        1、抓手抓取提前10mm对应的时间量
        2、发现开机启动后，会有一段时间的速度读取不准确
            延长自检期间的读取传送带频率的时间，暂定10s
        3、抓手模组和主体之间间距
            1、2 --70，33
            3、4 --85，33
        4、设备主体 调整高度，抓手调节
    @ 调试2.0 喷气 ---@ arm2
        ps: arm1 对应速度为 1179.57mm/s 24.00hz

        低处传送带长度 5030 = (1500 + 885 + 130)*2

        相机1的点位如下：

@2021-08-23
    @ 调试1.2  ---@@完成
        1\传送带长度
           8434mm  = 323 + 319 + 2*(1268 + 1810 + 818)
           14.8s --- 570mm/s  ---30hz    --系数：0.19
           19.34s --- 436.1mm/s --23hz   --系数：0.1896 ~= 0.19

       2\ 改小毕华代码中的get_photo中的超时时间 --1000mm
    @ 上午PLC调试抓手线路
    @ 被拉壮丁 运送设备1.5小时


@2021-08-20
    @ 在公司台式机上，装载了Xshell7 和 Xftp7
        暂时无问题，可用
    @@---更改agx时间-新研究
        1、前提，是在设备无网络连接，想要自己设定的条件下
        2、确保关闭--时间同步网络时间
            sudo timedatectl set-ntp 0
        3、sudo su //启用管理员权限
        4、date --set '2021-08-24 13:52:50' //设置系统时间
        5、hwclock -w -f /dev/rtc0 //将系统时间设置到硬件rtc0中
            hwclock -w -f /dev/rtc1
        6、hwclock -r -f /dev/rtc0 //查看rtc0中的时间
    @ 针对于 程序中相机超时--丢帧
        改小毕华代码中的get_photo中的超时时间


@2021-08-19
    @ ssc1.1设备arm2 相机触发无图片返回(超时)
        重启程序后，正常
    @ ssc-1.2
        检测到的本机mac : 0030646b7734
            对应 的 ifconfig   eth1--00:30:64:6b:77:34
            上网网线接口 连接 拓展的网卡的4号接口

@2021-08-18
    记得安装 新版的X-shell 和 百度云
    @ 完善试生产1.2 的程序
        上传git -- aifang-combine-code
        坐标转换， 配置文件，同步去重选择，抓取偏移量的细化，添加颜色+虚写一组空值(对应写入点位表的代码链 更改)
        读取mac地址的更改，PLC选择参数，点信息存入数据库前的列表优化，

@2021-08-17
    @ 试生产1.2 标定  mac 48b02d133b32 IP 192.168.1.128
        camera_a:  48024031
        camera_b:  48024039
            标定平面高度，30mm,  工作距离，675mm
            最近四点之一，到内角点距离 x:265, y 220
                内角点到第一个抓手0点（90，820）
                    1-2 y:600
                    2-3 y:900
                    3-4 y:600


@2021-08-16
    1\要和金明和产品讨论截图，上传等需求
        仅添加color字段就好
    2、要和产品那边沟通1.2和无锡的优先级
        优先1.2的标定

    @ 开始测写 数据库加颜色字段
        AI 增加返回字段 ff_color: 和boxs 一一对应，不为"yixian"时，为空字符""
        存入.txt的字典，需要和王婧核对，看是否有冲突
            添加在labelMap 字段内

@2021-08-13
    @ps: 试生产设备1.1 中的 现场主程序，ARM1,2相同
        和 ARM1-0812的路径下 的相差为 测试PLC抓手函数及引用
        已修改ARM1的引用模型逻辑，配置文件中增加参数，更改模型路径
        @ 本机程序 ARM1的主程序和配置，比现场多了配置抓手测试
            所以现场主程序和ARM2同步
    @ 给游江完善自检脚本 --中午
        添加记录次数
    @ 去试生产 现场部署羊绒模型 --调整抓手参数 ---现场无网络
    @ 测试，更改linux系统时间 为啥重启后更改数消失 ---测试失败
        sudo hwclock -w  # 确认修改
        sudo hwclock --systohc  # 系统时间同步到硬件时间
        sudo date -s '2021-08-12 12:12:12'  # 修改时间
        sudo timedatectl set-ntp 0   # 关闭时间同步网络时间



@2021-08-12
    @ 上午均在开会
        1、艾纺1.1后续的程序蓝本框架
            可能的改动：相机换方向拍摄
        2、无锡远纺--识别颜色 交给算法合到aiinfer上
            我另起函数识别的化，会耽搁点信息存入主队列的时间
                原因是，识别后的颜色一项，需要在存入前完善，否则暂无法更新上去
                    如，先存，存储时候的点ID，又怎么给识别后的对应的点
    1、等待艾纺1.2的需求
    2、08-10：艾纺-新需求--无锡远纺 --等待AI算法那边给出函数
    @3、配合周著斌 调试 老版羊毛转换新模型---- 逻辑能跑通 @@@@
    @ 4、测写PLC抓手稳定测试(循环随机抓取) ----08-13 写完，未测试 ARM1-0812的路径下
    5、各版本label等级要分6级   ---08-13 写完 在蓝本机-0806 主程序上


@2021-08-11
    @ 试写截取图片的函数
        用cv2 截取的图片格式为 numpy.ndarray
            单张单次 耗时 170-190 毫秒
            单个截取图片，平均耗时：4 毫秒
        用PIL 截取的图片格式为 PIL.Image.Image
    @ 接着试写 08.06 的第5点
        暂时能跑起来，但是没有数据，测不了点数据处理的后续操作
        存图数据库的返回ID 的字典的key格式不对
        image2world.py中的引用.cfg文件路径
        util.py、image2world.py 中 会有不同的参数路径应用
        特别在笔记本中执行image2world，需要手动改.cfg文件路径

@2021-08-10
    @ 下午 --给游江写 艾智检 的 PCI 自检脚本

    艾纺-新需求--无锡远纺 --等待AI算法那边给出函数
        1、未输入的批次号，默认为当天日期 ：如2021-0810
        2、数据统计 点数据--增加异纤的颜色 字段 分为 黑色，白色，红色，蓝色，其他。
            函数计算颜色值。注意看下arm新增函数对计算力的影响
            仅限无锡远纺使用。
            据AI算法--分析异纤颜色函数，传入numpy数组，返回color

    @ 08.06 的第5点
        测试实现python程序读取本机mac地址-ok
        分文件夹
            1、cfg1_need -- 这个文件夹中有
                camera_pars.cfg
                cfg.py
                config_armz.py --可以被引用
                distance_compensate.cfg
                image2world.py
                --均不需要引用
            2、share_func
                count_down_latch.py  --不被调用
                led.py --不被调用
                log.conf  --引用 log.conf OK
                point_deal_record.py  --不被调用
                utils.py -- 承担测试sql,和判断引用config 的功能
                choose_arm.py -- 需要输入AGX的macID--来判断arm1 or arm2





@2021-08-09
    @光源亮度检测 --0.5天
    @图片的存储和上传 -- 按规则(需讨论)
        上传
            创建记录的.txt
            根据点信息更改图片路径中，添加触发上传计数和数据传递，各level个数限制
            一般主动循环中添加触发，等待反馈

@2021-08-06
    @ 无锡，张家港，试生产1.1的arm1 都已经上传到git上
    艾纺试生产版本功能整理和完善
        1、建议是喷气和抓手的版本分开
        2、新版的数据库存储 和上传  --0.5天 (需讨论)
            @记录拍照表
            @记录图片表
            @记录点位表
            @记录批次号 --启动后，或停止在启动后 将会执行一次@
            @记录供应商 --在 数据库线程最后@
            记录错误表 --当暂停时触发读取记录@ (写入在数据库线程，读取在PLC线程，触发在生产者)
        3、@光源亮度检测 --0.5天
            相机异常
            AI异常
            光源异常
        4、图片的存储和上传 -- 按规则(需讨论)
            存原图 --已开发-已有控制参数
            转移图片并生成 .txt --已开发-已有控制参数
            按规则上传-并记录
        5、加载的配置文件按文件夹来，识别不同的mac地址来区分不同的文件夹
            主要的不同文件有：
                config_armz.py
                camera_pars.cfg
                image2world.py
                cfg.py



@2021-08-05
    @试生产2.0喷气
        1、高处的硬件可动，低处的传送带电机不可用，优先调整高处
        2、高处的已初步调试完毕，
            运行拍摄1000+ ， 能吹到垫上棉花的瓶盖
        3、因 低处的传送带电机，PLC控制端的接线、接起等问题，低处暂时测不了


@2021-08-04
    @试生产2.0喷气
        @arm2里面的硬盘为256G ---当天和朱伟讲过--暂时先用
        @


    把优先级高的写前面，低的写后面
    判断低的那部分前，先要判断优先部分的bool 还有没有true
    低的部分 每个函数写完都continue 一下
    所有PLC通讯函数内尽量不要有等待
    @ PLC 通信内容整理
        通用类
           @ 1、bool_check_process_PLC --自检--心跳
           @ 2、bool_circulation_process_PLC  --循环时的PLC--心跳
           @ 3、bool_get_label_PLC --取识别种类 no
           @ 4、bool_get_batch_PLC  --获取批次号
           @ 5、bool_get_speed_PLC  --传送带速度 no
           @ 6、bool_ctrl_stop   -- 接受PLC 发送的暂停指令 gai
           @ 7、bool_start_signal_PLC  --向PLC写入开始信号

            8、bool_err_record[0]  --循环触发读取-异常记录更新位（有变化才写入）
            9、bool_err_record[1]  --读取-异常记录异常记录初始位+ 33位

        喷气类
            10、bool_record_count_qp_PLC[0] --写入点的识别数量
            11、bool_record_count_qp_PLC[1] --读取是否需要清零-识别数量
           @ 12、bool_circulation_qp_PLC --命令PLC控制喷气
        抓手类
            @13、bool_claw_goback ---抓手归零-重建OP信号
            @14、bool_send_toPLC_claw ---写入PLC-抓取时刻
            @15、bool_read_plc_time_1
            @16、bool_read_plc_time_2 --读取PLC时间戳
            @17、bool_read_claw_state ---读取抓手状态
    --------
        优先类
            抓手类-全部 13、14、15、16、17
            12

        次级可延时类
            10、11
            8、9、7、6、5、4、3、2、1

    ---------
        主动需求类
            抓手类-全部 13、14、15、16、17
            12
            7、4、3


        自动定时类
            10、11
            8、9、6、5、2、1

@2021-08-03
    喷气ARM1: mac: 48b02d05aa36
        光源高度460mm, 间距472，双侧，每侧2排
        光源控制器亮度，220
        相机 工作距离：685mm + 30mm
        标定板高度：30mm
            camera_A :39024072
                近内角点：X：179，479 Y：305，515
            camera_B :48024048
        内角点-落点：1030
    喷气ARM2: mac:  48b02d185971
        光源高度450mm, 间距468，双侧，每侧2排
        光源控制器亮度，220
        相机 工作距离：680mm + 30mm
        标定板高度：30mm
            camera_A :39024083
                近内角点：X：138   Y：310
            camera_B :48024035
        内角点-落点：680
    试生产1.1现场修改
        临时屏蔽所有抓手


@2021-08-02
    修改文件：02-试生产\04-试生产2.0-喷气\01-程序相关\2.0喷气-ARM1\2021-07-27-ARM1-喷气调用AI类部署
        试写2.0喷气 计数功能试写
            需要发送和接收，接受PLC传来的计数清零信号
                2.0  计数  d500计数量     m70是清零
                @如果要握手交互，那需要确认程序和PLC是否可以共用一个地址
        试写 --错误记录
            开启--独立线程，发送触发 读写PLC信号
            在原PLC处理线程中，添加 错误记录，喷气计数 的具体函数
            在sql线程 添加 写入错误表的逻辑函数，并综合判断 是否需要 逻辑等待

    @ 09-试生产临时测试版本/arm1/
        尝试修改了 存图函数，从 存画图，改为 存原图加.txt



@2021-07-31
    @ 准备改造 抓手对应的偏差参数，一个抓手对应各相机的参数
        改造位置：02-试生产\09-试生产临时测试版本\ARM2-初始版本\2021-07-30-ARM2-新框架+老生产者\aiHjService_改造抓手参数
        position = 1,2,3
        x = [xx1,xx2,xx3] ----xx1就是1-a的对应参数,xx2就是2-c的对应参数,xx3就是3-b的对应参数


@2021-07-30
    @ 等待喷气设备硬件完善，标定校准
        光源加延长线，换控制器，移动低处的相机型材架(位置不合适)
    @ 试生产临时测试，程序改写 = 新框架，老生产者
        @



@2021-07-29
    @ 准备预写 2.0喷气程序
        @ 现场的光源用线不合理，建议扩充到4根延长线
        @ 现场的 光源控制器 手动调节有些问题，正和商家沟通
        @ 程序中添加计数（异纤），并发送给PLC，
            需要发送和接收，接受PLC传来的计数清零信号
            2.0  计数  d500计数量     m70是清零
    @ 抓手程序中，要有PLC故障记录
        特别是抓手的异常(轴时间异常，抓取异常)
            比如连续5次后，PLC发送信号，我这步捞取后记录

    @ 调试试生产临时老版本程序
        @ ARM1: 192.168.1.110
            mac:  48b02d3dcd47
            试生产1.1_ARM1_临时替换
        @ ARM2: 192.168.1.111
            mac:  48b02d4d84fa
            试生产1.1_ARM2_临时替换

@2021-07-28
    @无锡现场光源问题
        有可能为：某一通道处未连接紧密 或 延长线受损
    @试生产-设备1.1 切换羊绒模型，改为2抓手模式
        @ 现场反应：高处模组对应的1，2抓手不抓
            原因：arm1 配置文件未按实际情况更改完善---已处理

    @ 上午需完善 新刷 ARM1,ARM2
        arm1：10.246.104.80
        arm2：10.246.104.55
            @ 刷机-自动建目录
                test01_startrun.py
                /opt 中的软连接 在刷机时已建好
            @ 选择编辑器
                sudo select-editor
            @ 放入模型文件 : /mnt/data/data/aimodel
                放入解密的执行脚本：0727_wool_run_aimodel.tar.gz
                    解压
            @ 传入所需的项目压缩包，根据需求替换
                AI相关--复制了羊毛现场的模型文件、aiinfer--(试生产-AI-张家港羊毛相关-0204_aiinfer.tar.gz)
                整个项目框架：0423.tar.gz--(02-试生产\01-ARM1-high\往日程序)
                主控文件：0525--aiHjservice--(02-试生产\09-试生产临时测试版本\ARM1-初始版本)
            @ 测试主程序--通过 test
            @ 检查 mysql -p ---对于老版本，没啥问题
            @ sudo crontab -e

            @ vim /etc/rc.local

    @ 中午1点，远程更新张家港羊毛模型加密
        arm1: 本地连接IP：192.168.1.112
                联网IP：192.168.2.151
        arm2: 本地连接IP：192.168.1.113
                联网IP：192.168.2.221
        @ 更改了 删除原始羊毛模型 的逻辑位置



@2021-07-27
    应 现场需求-试生产 - 要临时切换成张家港羊毛模型
    AI相关--复制了羊毛现场的模型文件、aiinfer
    整个项目框架：0423.tar.gz
    主控文件：0525--aiHjservice

    羊毛模型的加密与解密--下午3点左右开始做
        1、将加密模型 -传入 /mnt/data/data/aimmodel/
        2、将 0727_wool_run_aimodel.tar.gz - -传入 /mnt/data/data/2test_remove/
            sudo tar -zxvf 0727_wool_run_aimodel.tar.gz
        3、vim /etc/rc.local
            sleep 12s
            #进入解密路径
            cd /mnt/data/data/2test_remove/c_test0112/
            #起解密程序指令
            sudo HOME=/home/appuser nohup ./wool_AImodel > /opt/logs/txl01/decode.log 2>&1 &
            sleep 35s
        4、确保 主程序中的删除有2个，因为羊毛模型有2个



@2021-07-23
    @ 将羊毛厂的500次归位信号的屏蔽
        在 07-19 文件夹中更改
        对应原因：据钱俊涛分析，有可能是归位信号引起的bug,详细原因待查
    @ 更新三丝棉模型
        替换.json文件
    @ 试生产 现场 PLC显示屏 显示：PLC设备无反应 PLC控制网卡
        估计原因，网线，或是路由器问题
    @ 图片返回名称会错位，要后期强制排序一下--arm2中已写


@2021-07-22
    @ 所有 while 循环中，需要加time.sleep(0.001) -- 防止CPU占满
    @ 生产者线程--暂停等待时，刷新的心跳，和暂停信号的周期改为 0.6s
    @ aimodel--.json 中的  加载模型路径需要改变
    @ AI类中的，modelinfer.py 已经改动，要替换--以替换
    @ 因为ARM1-抓手2坦克链坏掉，所以屏蔽了PLC，增加了拍摄间隔，增至1.9s
    @准备ARM2 的新程序
        修改 rc.local
        添加aimodel, 注意版本及--.json 中的  加载模型路径需要改变
        备份arm2文件--(07/21 已经备份好)
        打包arm1的项目
            替换 cfg.py
            替换 image2world.py
            替换 camera_pars.cfg
            替换 config_armz.py
        空跑测试--OK --1800次
@2021-07-21
    试生产调试ARM1 -- 2021-07-16-ARM1-调用AI类部署
        @@@@@@@ while 循环中，需要加time.sleep(0.001) -- 防止CPU占满
        4抓手上线，开启PLC连接信号
        调整抓手的下抓时机，X偏移量
        AIinfer (羊毛版) 对于 serong,yangshi, 有时识别错误，暂时屏蔽，只进异纤(配置文件中)
        @写ARM2抓手3的单个抓手抓取的循环测试 --完成

        @ 把PLC通讯线程，改为进程
        @ 不开PLC相关线程时，
            拍照间隔1.6s
                拍照 205 ms
                存图 115 ms
                AIinfer 115/180/250 ms
                串行调用aiinfer
            拍照间隔0.6s
                拍照 220 ms
                存图 120 ms
                AIinfer 130/195/260 ms
                串行调用aiinfer 105/200/300
        @ 开启 PLC相关线程时，
            拍照间隔1.6s
                拍照 340 ms + 60
                存图 175 ms
                AIinfer 500/640/800 ms
            拍照间隔0.6s
                跳帧，无法查看

@2021-07-20
    @ 初步完善了，旋转中心的换算相关
        文件在  02-试生产  03-公司测试-原卓郎  07-19-角度换算 center_of_the_circle1.py
    @ 需求 --戎怀阳
        将并行调用AIinfer 改为串行
            更改原因：在艾智检 发现 并行调用AI，会出现偶发的结果错误
    @ 4-4版本，调用AIinfer后等待返回后的处理，估计会有bug,应该及时结束异常帧的之后调用
@2021-07-19
    @张家港羊毛现场 调整有无羊毛判断的参数
        1000 --> 1500
    @ 需要整理出，aifang 程序的各版本，看是否能合并通用，或是做分支


@2021-07-16
    @ 写成 .txt文件，无内容 @@ok
        试了2次，都没有，实际内容应该是挺多的30几个点信息
        @ 是因为原来函数中判断"level", 引用了一个被删除的配置文件中的参数
    @ 实验了开线程 --写点位表的数据库， 单有 满队列删除点的情况下---成功
@2021-07-15
    @ 试写了 合并重合方框的 函数
        在 03-公司测试-原卓郎 -- 07-15-方框重合 -- overlap_boxes_test1.py
            不是太成熟，
                原理：检测2和矩形的中心距离X，Y ，
                    X 要大于2矩形x1+x2 的一半 or Y 要大于2矩形y1+y2 的一半(此时不重合)---需要放宽条件吗
                    把所有能重合的组合，穷举到列表
                    相互重合的组合都合并到一起，取平均中心点
                    返回被整合的--整合后的中心点

@2021-07-07  -07-09
    @任务1： 把直接调用AI类-改写到试生产1.1上，下周去测试(改写完，在蓝本机测试的生产者，待到外仓测试)
    @任务2： 解决网络时间 和 本机时间 同步，@@(已解决)
    @任务3： 改写队列

@2021-07-08
    @ 把直接条用AI类-改写到试生产1.1上
        @ log.conf 加了一组logger 输出
        @ config_armz.py 增加参数
        @ 主程序大改，大删
    @ 改写队列
        @1.重写3*5 个队列
        @2.重定义 self.list_zh1={}
            read_limit_label() # 选取点类别
        @3.processAiData
            过滤：label, pic的边缘位置，低阈值分数，面积，边缘世界坐标
            分等级：对应label 的分数和面积 共同决定
        4. 在存入队列前(去重的时候)， 当点的数量大于限定数量时，根据优先级，置信度来排序
            remove_point2
            @测试列表排序及截取

        @5. 队列相关
            @ put_record2queue 依照等级存入各第一梯队
            @ 。。。

        6.写入点数据表，最好改为独立线程（逻辑上存入不着急）



@2021-07-07
    @在Linux上 测试 通过命令 配置固定IP ---测试未成功
    @测写 检查 网络时间 和 本机时间 同步，还在进行@@(已解决)

@2021-07-06
    @ 新版拍照的直接调用AI类 -改造情况
        4000次 测试ok
        逻辑思路：
            1.拍照
            2.1.用线程池，开存原图函数1
            2.2.用线程池，开之后函数2
            3.1.在线程函数2中，开进程 调用AIinfer
            3.2.在线程函数2中，处理点数据中，开进程 移动照片
        时间范围：
            拍照：202 - 210   + 10（存数据库）
            存图：88-100
            AI： 109、170、237
            点处理：50

@2021-07-05
    @试生产1.0 出现拍完照，没有对应当天文件夹的情况
        @在无锡远方也出现过
            可能行分析
                1.写入时报错 ？
                2.定时任务删除 ？
            最新情况分析，程序启动时，很有可能，系统还没同步网络时间，等程序创建文件夹以后，系统才同步时间。
            @0706 可以获取网络时间
    @ 新版拍照，在一段时间后，无法再调用成功（强制也不行）
        改成并行调用AI的类
    @ （0706暂时解决）直接调用新版拍照，出现并行更慢的现象 ！！！
    @ 张家港 出现 相机超时

@2021-07-02
    @存队列改写
        self.queue_first，self.queue_second ，self.queue_third ，self.queue_fourth ，self.queue_fifth ，
    @ aiModel.py -- aiInfer -- atssDetectionInferCommonNoDataProcess
        @ modelInfer.py -- atssDetectionInferCommonNoDataProcess -- model_detection.inference(img)
            @ aiModel.py -- __init__ -- self.model_atss_detection --TritonClientNew
                @ tritonclient_new.py --TritonClientNew -- inference -- inputs.append(tritonclient.grpc.InferInput(self.input_names, img.shape, 'FP32'))





@2021-07-01
        @点数据筛选存入规则：
            1.限定单次拍照后产生点的数量(多了也抓取不了)--(5)
                1.1.面积筛选 大于800

            2.当点的数量大于限定数量时，根据优先级，置信度来排序
                2.1.先根据类别+阈值+面积，分出等级，根据等级来排组序
                    (如：异纤中，面积大于1500，且分数大于0.4 的才归为异纤优先，不满足的归为异纤常规)
                2.2.同等级组，根据Y值来排序
        @取数据逻辑：
            1.抓手1，从第一梯队中，按优先级取图
                (如：最先queue_first_0，再queue_second_0，依次往后)
                (抓手1来不及抓的点，会存入第二梯队)
            2.抓手2，从第二梯队中，按优先级取图
                若第二梯队中，没有取到点数据，则去取第一梯队
                (抓手2来不及抓的点，会存入第三梯队)
            3.抓手3，从第三梯队中，按优先级取图
                若第三梯队中，没有取到点数据，则去取第二梯队
                若第二梯队中，没有取到点数据，则去取第一梯队
                (抓手3来不及抓的点，舍去)
            4.抓手3，从第三梯队中，按优先级取图
                若第三梯队中，没有取到点数据，则去取第二梯队
                若第二梯队中，没有取到点数据，则去取第一梯队
                (抓手4来不及抓的点，舍去)
        @@@@队列 异纤优先、色绒优先、脏绒（羊屎）、异纤常规、色绒常规
            @ 队列：First, second, third, fourth, fifth
                @第一梯队：queue_first_0,queue_second_0,queue_third_0,queue_fourth_0,queue_fifth_0,
                @第二梯队：queue_first_1,queue_second_1,queue_third_1,queue_fourth_1,queue_fifth_1,
                @第三梯队：queue_first_2,queue_second_2,queue_third_2,queue_fourth_2,queue_fifth_2,
        @ 等级分类
            异纤优先：阈值>0.4，面积>800像素（标准）；
            色绒优先：阈值>0.5，面积>2500像素；
            脏绒（羊屎）：阈值>0.25，面积>800像素（标准）；
            异纤常规：阈值>0.32，面积>800像素（标准）；
            色绒常规：阈值>0.25，面积>800像素（标准）；


        ------改造----
        重新创建5*3个队列

@2021-06-29
        @ 试生产1.1:ARM1-3,4号抓手需要屏蔽,
                1.250PLC屏蔽,
                传送带速度写为了定值 170.66
                @ 读取 传送带速度--在 250
                @ 读取 是否暂替--也在 250

        @ 满队列后舍去之前的点，取字典成列表中，写了bug,已更改

        考虑@ 单次拍摄后，AI返回的点数较多时，
                要不要限制个数(多了也抓取不了)
                    限制规则(优先级-分类-分数)
        @@@@队列 异纤优先、色绒优先、脏绒（羊屎）、异纤常规、色绒常规
        @@@@矩形重合判断，合并
        @@@@直接调AI服务类


@2021-06-29
        @ 试生产1.1，最好在PLC端 能有地址来选择是
                1.羊毛还是棉花  (分类，模型路径)
            2.报错异常未写入数据库
@2021-06-28
        @无锡远纺，主控程序ARM1-ARM2是一致的
        @ 直接调用AI服务
            @ 可以用tpye-c口转网口，连接映美精相机，但是不推荐，没有巨型帧

@2021-06-25
        @试生产1.1-- 更换模型ok,前一天调整抓取时机完成(23hz的速度下)
        @写入.txt异纤画框功能

@2021-06-22
        @试生产1.1--更新三丝棉AI模型
        @

@2021-06-21
        @更改羊毛Y距离,config_armz, 和 image2world 都有所改动

@2021-06-17
        @生成密钥
             ssh-keygen -t rsa -C "taoxiaolin.gw@heyqu.net"
            一路“enter”到底

        @ 查看公钥
            cat /c/Users/Administrator/.ssh/id_rsa.pub
        @查看私钥
            cat /c/Users/Administrator/.ssh/id_rsa
        ------------------------------
        @更新羊毛--识别无羊毛--上传数据
            程序要求-第一遍检测 和第二遍检测需要有空档期 2m以上


@2021-06-16
        @ 准备写一个线程，来单独画框
            当分析出有要画的时，发送数据，图片名（原图还在image_original）

@2021-06-15
        @ 开始完善试生产-喷气-相机B的标定文件
            相机A，B 成像中心之间，相差621.5mm

        @@@   金明布置任务
                2.0的摄像头标定  @标定已完成，但代码端还没启用--AI端的时间问题
                2.0 http调用改为python调用
                有无羊毛的判断 @初步改好
                羊毛的数据回传 @初步改好


@2021-06-11
        @ 新换的arm1 mac地址 48:b0:2d:05:aa:64
            48b02d05aa64
        @做了喷气-相机2 的标定，文件在桌面/0717_1/

@2021-06-10
        PLC X轴速度列表[ 300mm, 154ms, = 1948 mm/s
                        1000mm, 430ms, = 2325 mm/s
                        500mm, 233ms, = 2145 mm/s
                        1800mm, 746ms, = 2413 mm/s ]
        现在 高速的脉冲值为：67.00hz
        原始 低速的脉冲值为：23.00hz

        抓取轴时间异常：预判-写入 max[0.3145]
                                正常是：[0.0576, 0.165, 0.1762, ]

        @@相机模块2-的2号抓手，由于X轴速度过快，坦克链强度跟不上，暂已屏蔽，
            1号抓手判定过位后，存入了3号队列

        save_pic_name1：[{'39024073': '/mnt/data/data/image_original/img_2021_06_10/camera39024073_2021_06_10_10_55_30_549104.jpg',
         '39024091': '/mnt/data/data/image_original/img_2021_06_10/camera39024091_2021_06_10_10_55_30_549104.jpg',
          '48024043': '/mnt/data/data/image_original/img_2021_06_10/camera48024043_2021_06_10_10_55_30_549104.jpg'}]
第47次，存图线程完成时间：0.673


@2021-06-07
    @无锡远纺arm1
        @ 6个数据库表.py文件
        @ utils.py
        @ config_arm.py BOOL_SLEEP MELSEC_SERVER_IP_F 等
        @ ai_hj_run_service.py 整个替换 save_pic 中的调用和返回
        @



@2021-06-04
    @试生产ARM1  改造前 生产者循环时间为0.92s
        @图片和.txt文件生成成功，上传成功，数据录入成功，上传成功
            @改造注意事项：
                1、mysql -p  kt#H@s3AA&qcezJK
                    1.1、 更新  db_cotton_local.sql
                2、替换/opt/config/uploadConfig.json
                3、运行 test01_startrun.py 创建要用的文件夹（自动上传部分）
                4、/etc/rc.local 中，启动自动上传脚本

    @试生产1.1版本 --2.0拍照改造，和4抓手改造
        @测试 log.conf 增加sql的log
            记录的.py文件要：
                import logging.config
                logging.config.fileConfig('log.conf')
                logger6 = logging.getLogger('sql')




@2021-06-03
    @ --上传图片和.txt
    02-试生产--0001功能测写--05-25-在公司测试批次相关-试验机
        @在公司测试机上，上传图片和.txt 成功
        @可以在 后台管理--图片标注审核--标注图片列表--（业务：羊毛，，批次为：上传的文件夹）

    @ --上传数据库
    02-试生产--01-ARM1-high--05-25-试生产-批次增加-本机

    02-试生产--0001功能测写--05-25-在公司测试批次相关-试验机
        @ 更新增加了 /opt/config/uploadConfig.json--上传表
        @ 云服务端的表中参数项--需要核对

@2021-05-28
        喷气调试现状参数
        image2world.py 中
            pxy_add1 = [[230,560],[230,560],[230,560]]
            pxy_add1_a = [300, 800]#支架与固定点单位距离 300是X坐标反向，800是内角点到边缘的大概距离

        传送带速度 ：1179.57mm/s  24h.00z

@2021-05-27
        [开始，点信息筛选完，点去重完， 点合并处理完, 点信息存入队列]
        [363, 431, 447, 457, 575 ]
        [425, 468, 489, 494, 494 ]
        [417, 455, 457, 481, 496 ]
        [323, 396, 417, 422, 458 ]
        [433, 521, 547, 551, 563 ]
        [447, 504, 510, 515, 536 ]
        [431, 479, 531, 562, 582 ]

@2021-05-26
        self.ai_point_data = []
        self.ai_point_data = [ ["1",{'boxes': [[], [], []], 'scores': [,,], 'labels': ['', '', ''], 'class_scores': [], 'img_exist': 1} ],]

        从开始取像开始，耗时
        拍完照：        [0.066,0.047, 42 ,21 ,72 ,46
        真正AIinfer     [0.238,0.277, 268,272,380,262
        实际到AI返回完：[0.355,0.406, 339,328,527,338
        到数据存入队列：[0.612,0.537, 505,476,683,583

        从生产者入队列，到消费者处理耗时30ms

        等待41ms时，实际取队列时时间戳：5.233
                        等待完的时间戳：5.294
                    发送指令后的时间戳：5.330  (和PLC交互时间约为16ms)
            初步结论为，需要50ms的缓冲时间
            从确认发送，到发送完成有20ms的延时
            开线程后计算等待时间不稳定


@2021-05-19
    @张毕华取像程序--循环时间应大于250ms左右，否则下一帧会有100ms的延时

@2021-05-18
    @和PLC连接，PLC端设置好IP，端口，MC协议，录入现场PLC后，需要断电重启，
        否则是ping的通，但是程序会返回 [Errno 111] Connection refused

    @和PLC通讯时间，约为11ms,(write_word_data)
        写1个地址是11ms,写连续20个也是11ms
        但连续60个,间隔0.5s的时候，单次15-24ms，不稳定了
            连续60个,间隔0.2s, 11-30ms

    @AI服务调用中 调用AIinfer 和存图，需要并行，且，需要等待存完图，才能去执行下一个循环
        现场的AI拍照，还是不稳定，一次间隔会花费100ms,10ms

@2021-4-25
    试生产
        ARM1
            当速度是

@2021-4-21
    试生产

        9070mm/圈   61.14s  2000hz
        148.348mm/s
        0.074174

        @ 23.70s ,1圈，52hz
        @ 22.45s ,   55hz


@2021-3-19
    试生产

        9070mm/圈   68.32s  2000hz
        132.7576mm/s
        0.0663788




@2021-3-9
    ASCII码 chr  ord
    对于16位的分割
        & 0xff #将字符 转成2进制，取最后8位，再转回去

        int1 = code_ascii[-8:]
        int2 = code_ascii[:-8]
    对于8位的判断
        if list_int[j] < 256:#2的8次方，8位
            result_b = chr(list_int[j])  # ASCII码 转成 字符




@2021-3-8
    存AI的照片for循环写错位置，修改


@2021-3-5
    在消费者中，当读取到PLC发出的暂停信号后，添加读取PLC异常信息
        （此时PLC因异常导致暂停，故障记录的地址位上被写入，ARM及时读取）


    抓手1在 242mm/s  有30mm的误差 ，
        在 161mm/s  不误差

@2021-2-25
    相机的触发线，不通的批次，不同颜色对应的功能会发生变化，接线前需要核对清楚
    I/O Input 1 对应的颜色接正，
    Not Connected 对应的颜色接负极

@2021-2-24
    相机抓手联调测试：(固定速度：20.00Hz)
        抓手1: X--OK , Y--OK
        抓手2：X--OK , Y--OK
        抓手3: X--OK , Y--OK
        抓手4: X--OK , Y--OK



@2021-2-23
    @2021-3-5因换了不同品牌的电机，速度不一样
        传送带变频器20.00HZ 时
            7：26.57 = 446.57 大概9圈
            8031*9/446.57 = 161.8537

            6:36.98 = 396.98
            8031*8/396.98 = 161.842

            99.17 ---161.9643
            148.88 ---161.8283
            @@@最新对应系数为 8.0927 mm/s/Hz


    高处传送带的周长为8031mm
    传送带变频器20.00HZ 时，速度为127.8822 mm/s(5圈，5分14秒=314)
    传送带变频器16.00HZ 时，速度为102.3057 mm/s(4圈，5分14秒=314)
    对应系数为 6.3941 mm/s/Hz

    传送带的速度，在初始化的时候读取至正常值，才进入生产者的循环，和消费者的循环
    在消费者中，也有取传送带速度的判断

    在程序上有点X值的所在该设备上的范围判断，需要根据实际情况更改

    AI后台管理上，配置VPN：arm的mac地址，对应名称





@2021-2-22
    在镜像好的ARM1上完善内容
    首先安装，直连显示器，键鼠设定相机网卡IP
    查看此时的上网IP

    X-shell 到ARM上
        在 /mnt/data/建路径，传文件

        修改 /etc/rc.local

        修改 /opt/config/ 上的MAC地址

        整个替换aiInfer

@2021-02-20
    利用arm2，调试1号模组上的PLC抓手(IP:192.168.1.250)
    利用测试文件(print):写入，读取正常


@2021-02-19
    相机软触发测试正常
    但是，相机在程序停止后，参数将会变成默认值，现象出现在，A，B相机，这2个相机所用的网线卡扣安装时就发现不行，一定需要螺丝固定拧紧
        相机参数的异常表现：A、B相机的参数，在程序刷完，还在运行时，能维持此值，一旦停止程序后，参数变为默认值，
        猜测可能和网线有关，因为C相机所用的网线是以前的老网线，卡扣正常，参数录入后也正常


    采用替换法
    另外，A，B的触发线也是有问题的，使用GPIO触发时，仅C相机有返回，将C的触发线换给A,B，均能收到对应的触发

    对于4G路由，和交换机的组合：
        因为交换机暂时找不到配置网页，所以优先改4G路由的ip
        交换机：192.168.1.1
        4G路由：192.168.1.1 --> 192.168.1.11
        @然后将4G路由的某一个lan口，和交换机的1口相连，其他设备接入交换机：笔记本能通过WiFi连接arm，arm上能ping通PLC
            @@对于固定的设备和路由组合，一般设备被分配到的IP是不会发生变化的

        对于PLC那边通讯是否有影响，还没验证






@
@
@
@
@
@
@

